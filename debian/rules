#!/usr/bin/make -f
# Sample debian/rules that uses debhelper.
# GNU copyright 1997 to 1999 by Joey Hess.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# for quilt
include /usr/share/quilt/quilt.make

DEB_BUILD_ARCH_OS  ?= $(shell dpkg-architecture -qDEB_BUILD_ARCH_OS)
DEB_BUILD_ARCH_CPU ?= $(shell dpkg-architecture -qDEB_BUILD_ARCH_CPU)

ifeq ($(DEB_HOST_ARCH_OS),linux)
	CONFIGURE_ARGS += --with-selinux
endif

ifeq ($(DEB_BUILD_ARCH_CPU),armel)
	CONFIGURE_ARGS += --without-libcap-ng 
endif

CFLAGS += -fsigned-char -Wall
ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
        CFLAGS += -O0
else
        CFLAGS += -O2
endif
ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
        INSTALL_PROGRAM = install -s
else
        INSTALL_PROGRAM = install
endif

PACKAGE = smartmontools
SRC_VERSION := $(shell dpkg-parsechangelog | sed -ne 's/^Version: \(.*\)-.*/\1/p'| cut -d':' -f2)
SVN_REVISION := $(shell echo $(SRC_VERSION) | awk -F"+" '{ print $$2 }' | sed 's/svn//' )
TARBALL = $(PACKAGE)_$(SRC_VERSION).orig.tar.gz

get-orig-source:
		rm -rf get-orig-source $(TARBALL)
		mkdir get-orig-source
		svn export -r $(SVN_REVISION) https://smartmontools.svn.sourceforge.net/svnroot/smartmontools/trunk/smartmontools/ \
			get-orig-source/$(PACKAGE)-$(SRC_VERSION).orig
		GZIP=--best tar czf $(TARBALL) -C get-orig-source $(PACKAGE)-$(SRC_VERSION).orig
		rm -rf get-orig-source
		echo "  "$(TARBALL)" created; move it to the right destination to build the package"

configure: configure-stamp
configure-stamp: debian/stamp-patched
	dh_testdir
	./autogen.sh
	CFLAGS="${CFLAGS}" ./configure --prefix=/usr		 \
				--sysconfdir=/etc		 \
				--mandir=/usr/share/man		 \
				--with-initscriptdir=/etc/init.d \
				--with-docdir=/usr/share/doc/smartmontools \
				--enable-drivedb \
				--enable-savestates \
				--enable-attributelog \
				--with-savestates=/var/lib/smartmontools/smartd. \
				--with-attributelog=/var/lib/smartmontools/attrlog. \
				${CONFIGURE_ARGS}
	touch configure-stamp


build: build-stamp
build-stamp: configure-stamp
	dh_testdir
	# Add here commands to compile the package.
	$(MAKE)
	touch build-stamp

clean: unpatch
	dh_testdir
	dh_testroot
	# rm -f debian/logcheck.logcheck.ignore.*
	# Add here commands to clean up after the build process.
	[ ! -f Makefile ] || $(MAKE) distclean
	rm -f build-stamp configure-stamp \
	      Makefile.in examplescripts/Makefile.in aclocal.m4 configure
	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_prep
	dh_installdirs
	$(MAKE) DESTDIR=$(CURDIR)/debian/smartmontools \
		INSTALL_PROGRAM="${INSTALL_PROGRAM}" install-sbinPROGRAMS
	$(MAKE) DESTDIR=$(CURDIR)/debian/smartmontools \
		install-sysconfDATA
	$(MAKE) DESTDIR=$(CURDIR)/debian/smartmontools \
		install-man
	$(MAKE) DESTDIR=$(CURDIR)/debian/smartmontools \
		examplesdir='$$(docdir)/examples'      \
		-C examplescripts/ install-examplesSCRIPTS install-examplesDATA
	install -D -m 755 debian/smartmontools-bug \
		$(CURDIR)/debian/smartmontools/usr/share/bug/smartmontools

# Build architecture-independent files here.
binary-indep:
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installdocs
	dh_installexamples
	dh_installmenu
	dh_installlogrotate
	dh_install
	dh_installinit -- start 20 2 3 4 5 . stop 20 1 .
	dh_installcron
	dh_installman
	dh_installinfo
	dh_lintian
	dh_installchangelogs CHANGELOG
	dh_link
	dh_strip
	dh_compress
	dh_fixperms
	chmod 755 $(CURDIR)/debian/smartmontools/etc/smartmontools/run.d/10mail \
		$(CURDIR)/debian/smartmontools/etc/smartmontools/run.d/10powersave-notify \
		$(CURDIR)/debian/smartmontools/usr/share/smartmontools/smartd-runner
	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure get-orig-source
